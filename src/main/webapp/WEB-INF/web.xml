<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
    http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">




  <!-- 读取除了mvc外的配置文件 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:/applicationContext.xml</param-value>
  </context-param>

  <!-- 整个web容器的动向由这个监听器进行监听. 这个监听器可以监听项目的启动. 从而直接加载核心配置文件 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- 配置shiro的代理过滤器 开始 -->
  <!--  <filter>-->
  <!--    <filter-name>shiroFilter</filter-name>-->
  <!--    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
  <!--    <init-param>-->
  <!--      <param-name>targetFilterLifecycle</param-name>-->
  <!--      <param-value>true</param-value>-->
  <!--    </init-param>-->
  <!--    <init-param>-->
  <!--      &lt;!&ndash; 这里的shrioFilter必须和spring配置shiro里面的  过滤器ID一致 &ndash;&gt;-->
  <!--      <param-name>targetBeanName</param-name>-->
  <!--      <param-value>shiroFilter</param-value>-->
  <!--    </init-param>-->
  <!--  </filter>-->
  <!--  <filter-mapping>-->
  <!--    <filter-name>shiroFilter</filter-name>-->
  <!--    <servlet-name>springMVC</servlet-name>-->
  <!--  </filter-mapping>-->
  <!-- 配置shiro的代理过滤器 结束 -->

  <!-- 字符编码过滤器 -->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- 跨域过滤器 -->
  <filter>
    <filter-name>SimpleCORSFilter</filter-name>
    <filter-class>com.iflytek.eshop.utils.SimpleCORSFilter</filter-class>
    <init-param>
      <param-name>IsCross</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>SimpleCORSFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>




  <!-- springmvc前端控制器配置 -->
  <servlet>
    <servlet-name>springMVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 给出spring的路径 -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springmvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup><!-- 当web容器加载的时候, 初始化spring -->
  </servlet>

  <servlet-mapping>
    <servlet-name>springMVC</servlet-name>
    <url-pattern>/</url-pattern><!-- 所有 -->
  </servlet-mapping>


</web-app>
